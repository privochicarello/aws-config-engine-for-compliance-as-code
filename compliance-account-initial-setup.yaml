#
# Copyright 2017-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.
#

AWSTemplateFormatVersion: '2010-09-09'
Description: Initialize the Compliance-as-Code Engine in the Compliance Account

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Compliance-as-Code Engine Configuration
        Parameters:
         - MainRegion
         - OtherActiveRegions
      - Label:
          default: (Advanced User Only) Deployment options
        Parameters:
         - DefaultRuleSet
         - DefaultRuleSetOtherRegions
         - ApplicationAccountIds
         - AccountListLocalPath
         - WhitelistLocation
         - CentralizedS3BucketConfig
         - CodeBuildRulesTemplateProjectName
         - CodebuildSourceS3BucketConfig
         - CodebuildDestinationS3BucketConfig
         - CodePipelineArtifactS3BucketConfig
         - CentralizedS3BucketComplianceEventName
         - ComplianceEngineCodeBuildRoleName
         - ComplianceEngineCodePipelineRoleName
         - ConfigAndComplianceAuditRoleName
         - ConfigAndComplianceAuditRolePath
         - ConfigRulesStackName
         - RuleSetArtifactS3FileName
         - RDKLambdaRoleName
         - RdklibLayerName
         - RulesLambdaVpcConfigLocalPath
         - LambdaETLName
         - LambdaRoleETLName
         - DatalakeQueries
         - EngineComplianceRule

Parameters:
  CentralizedS3BucketConfig:
    ConstraintDescription: Enter DNS-compliant prefix
    Description: Bucket prefix where Config logs will be stored. The Bucket will be created with a dash and the account ID (12-digit) appended to the prefix you have entered.
    Default: centralized-config
    MaxLength: 63
    MinLength: 10
    Type: String
  MainRegion:
    Description: Region which is designated as main Region (e.g. us-west-2).
    Default: us-west-2
    AllowedValues: 
    - us-east-1
    - us-east-2
    - us-west-1
    - us-west-2
    - ap-south-1
    - ap-northeast-1
    - ap-northeast-2
    - ap-southeast-1
    - ap-southeast-2
    - ca-central-1
    - eu-central-1
    - eu-west-1
    - eu-west-2
    - eu-west-3
    - sa-east-1
    AllowedPattern: ^.{0,14}$
    ConstraintDescription: Select one AWS Region only.
    Type: String
  OtherActiveRegions:
    Description: List of Regions which needs Rules, which are not the main Region, separated by comma and no space (e.g. us-west-1,ap-southeast-1).
    Default: ""
    AllowedPattern: (^$|^(ap|ca|eu|sa|us)-(north|east|west|south|central)(east|west)*-\d(,(ap|ca|eu|sa|us)-(north|east|west|south|central)(east|west)*-\d)*$)
    Type: String
    ConstraintDescription: List regions separated by comma and without any space.
  EngineComplianceRule:
    Description: Rule name which review the state of this deployment
    Default: COMPLIANCE_RULESET_LATEST_INSTALLED
    Type: String
  CodeBuildRulesTemplateProjectName:
    Description: CodeBuild rules build template project name
    Default: Compliance-Rule-Template-Build
    Type: String
  CodeBuildRulesDeployTemplateProjectName:
    Description: CodeBuild rules deploy template project name
    Default: Compliance-Rule-Template-Deploy
    Type: String
  CodePipelineComplianceEnginePipelineName:
    Description: CodePipeline Compliance Engine Pipeline name
    Default: Compliance-Engine-Pipeline
    Type: String
  CodebuildSourceS3BucketConfig:
    ConstraintDescription: Enter DNS-compliant prefix
    Description: Bucket prefix from where the source code will be picked up by CodeBuild. The Bucket will be created with a dash, the account ID (12-digit), another dash and the region name appended to the prefix you have entered.
    Default: compliance-engine-codebuild-source
    MaxLength: 63
    MinLength: 10
    Type: String
  CodebuildDestinationS3BucketConfig:
    ConstraintDescription: Enter DNS-compliant prefix
    Description: Bucket prefix from where CodeBuild will put the CloudFormation templates. The Bucket will be created with a dash, the account ID (12-digit), another dash and the region name appended to the prefix you have entered.
    Default: compliance-engine-codebuild-output
    MaxLength: 63
    MinLength: 10
    Type: String
  CodePipelineArtifactS3BucketConfig:
    ConstraintDescription: Enter DNS-compliant prefix
    Description: Bucket prefix from where CodePipeline will store its artifacts. The Bucket will be created with a dash, the account ID (12-digit), another dash and the region name appended to the prefix you have entered.
    Default: compliance-engine-pipeline-artifact
    MaxLength: 63
    MinLength: 10
    Type: String
  CentralizedS3BucketComplianceEventName:
    ConstraintDescription: Enter DNS-compliant prefix
    Description: Bucket prefix where Compliance Event will be stored. The Bucket will be created with a dash and the account ID (12-digit) appended to the prefix you have entered.
    Default: compliance-engine-events-centralized
    MaxLength: 63
    MinLength: 10
    Type: String
  ComplianceEngineCodeBuildRoleName:
    Description: Role Name of the Compliance Account CodeBuild Role
    Default: ComplianceEngine-CodeBuildRole
    Type: String
  ComplianceEngineCodePipelineRoleName:
    Description: Role Name of the Compliance Account CodePipeline Role
    Default: ComplianceEngine-CodePipelineRole
    Type: String
  ConfigAndComplianceAuditRoleName:
    Description: Role Name of the Compliance Account Cross Account Role
    Default: AWSConfigAndComplianceAuditRole-DO-NOT-DELETE
    Type: String
  ConfigAndComplianceAuditRolePath:
    Description: Role Path of the Compliance Account Cross Account Role
    Default: service-role/
    Type: String
  ConfigRulesStackName:
    Description: Stack Name of all the Config Rules that will be generated in each region
    Default: Compliance-Engine-Benchmark-DO-NOT-DELETE
    Type: String
  RuleSetArtifactS3FileName:
    Description: the S3 key of the ruleset artifact
    Default: ruleset.zip
    Type: String
  RDKLambdaRoleName:
    Description: IAM role name for all the custom rule lambda functions
    Default: ComplianceEngine-rdkLambdaRole
    Type: String
  RdklibLayerName:
    Description: Name of RDK Lib Lambda Layer Name
    Default: compliance-engine-rdklib-layer
    Type: String
  LambdaETLName:
    Description: Default ETL Lambda name in compliance account.
    Default: ComplianceEngine-ETL
    Type: String
  LambdaRoleETLName:
    Description: Default ETL LambdaRole name in compliance account.
    Default: ComplianceEngine-LambdaETLRole
    Type: String
  DefaultRuleSet:
    Description: Default RuleSet name to deploy in AWS accounts.
    Default: baseline
    Type: String
  DefaultRuleSetOtherRegions:
    Description: Default RuleSet name to deploy in non-main regions in AWS accounts, if other regions are used.
    Default: baseline
    Type: String
  ApplicationAccountIds:
    Description: Command seperated application account Ids list (i.e. 111111222222 or 111111222222,222222333333) for aggregated view
    Default: "111111222222"
    Type: CommaDelimitedList
  AccountListLocalPath:
    Description: Deploy rulesets according to account list with path in rulesets-build/
    Default: config/account_list.json
    Type: String
  RulesLambdaVpcConfigLocalPath:
    Description: Deploy rules lambda functions within vpc according to vpc config list with path in rulesets-build/ or let it empty for creating lambda functions in AWS
    Default: ""
    Type: String
  WhitelistLocation:
    Description: Bucket name and key of the location of your whitelist (i.e. some-bucket/compliance_whitelist.json) or let it empty in no whitelist.
    Default: ""
    Type: String
  DatalakeQueries:
    Description: Create a set of Athena queries to analyze compliance events.
    Default: true
    AllowedValues:
      - true
      - false
    Type: String

Conditions:
    IsMainRegion: !Equals [ !Ref 'AWS::Region', !Ref MainRegion ]
    NotMainRegion: !Not [ !Condition IsMainRegion ]
    WhitelistLocation: !Not [ !Equals [ "", !Ref WhitelistLocation]]
    OtherActiveRegions: !Not [ !Equals [ "", !Ref OtherActiveRegions]]

Resources:
  # Bucket for RDK
  RDKS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ "-", [ "config-rule-code-bucket", !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
      Tags:
      - Key: Owner
        Value: Security
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !ImportValue KMS-compliance-engine-key-id
              SSEAlgorithm: aws:kms

# Bucket for all the logs from Config
  CentralizedS3Bucket:
    Condition: IsMainRegion
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ "-", [ !Ref CentralizedS3BucketConfig, !Ref 'AWS::AccountId']]
      LifecycleConfiguration:
        Rules:
        - Status: Enabled
          Transitions:
          - StorageClass: STANDARD_IA
            TransitionInDays: 30
      Tags:
        - Key: Owner
          Value: Security
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !ImportValue KMS-compliance-engine-key-id
              SSEAlgorithm: aws:kms

  CentralizedS3BucketPolicy:
    Condition: IsMainRegion
    DependsOn: CentralizedS3Bucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Join [ "-", [ !Ref CentralizedS3BucketConfig, !Ref 'AWS::AccountId']]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: s3:GetBucketAcl
          Effect: Allow
          Principal:
            Service: config.amazonaws.com
          Resource: !Join [ "", ["arn:aws:s3:::", !Ref CentralizedS3BucketConfig, "-", !Ref 'AWS::AccountId']]
          Sid: AWSConfigBucketPermissionsCheck
        - Effect: Allow
          Principal:
            Service:
              - config.amazonaws.com
          Action: 's3:ListBucket'
          Resource: !Join [ "", ["arn:aws:s3:::", !Ref CentralizedS3BucketConfig, "-", !Ref 'AWS::AccountId']]
          Sid: AWSConfigBucketExistenceCheck
        - Action: s3:PutObject
          Condition:
            StringEquals:
              s3:x-amz-acl: bucket-owner-full-control
          Effect: Allow
          Principal:
            Service: config.amazonaws.com
          Resource: !Join [ "", ["arn:aws:s3:::", !Ref CentralizedS3BucketConfig, "-", !Ref 'AWS::AccountId', "/AWSLogs/*"]]
          Sid: AWSConfigBucketDelivery

# CodeBuild + Pipeline

  CodePipelineEngine:
    Condition: IsMainRegion
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Join [ "-", [ !Ref CodePipelineArtifactS3BucketConfig, !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref CodePipelineComplianceEnginePipelineName
      RoleArn: !Join [ "", ["arn:aws:iam::", !Ref 'AWS::AccountId', ":role/", !Ref ComplianceEngineCodePipelineRoleName]]
      Stages:
        - Name: S3Source
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                S3Bucket: !Join [ "-", [ !Ref CodebuildSourceS3BucketConfig, !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
                PollForSourceChanges: True
                S3ObjectKey: !Ref RuleSetArtifactS3FileName
              OutputArtifacts:
                - Name: TemplateSource
              RunOrder: 1
        - Name: BuildRulesTemplate
          Actions:
            - Name: BuildTemplates
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              OutputArtifacts:
                - Name: RuleTemplateSource
              RunOrder: 1
              Configuration:
                ProjectName: !Ref CodeBuildRulesTemplateProject
        - Name: DeployConfigRules
          Actions:
            - Name: DeployConfigRulesTemplates
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: RuleTemplateSource
              RunOrder: 1
              Configuration:
                ProjectName: !Ref CodeBuildRuleDeployProject

  CodeBuildRulesTemplateProject:
    Condition: IsMainRegion
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !Join [ "", ["arn:aws:iam::", !Ref 'AWS::AccountId', ":role/", !Ref ComplianceEngineCodeBuildRoleName]]
      Artifacts:
        Type: CODEPIPELINE
      Name: !Ref CodeBuildRulesTemplateProjectName
      Description: Build the Config Rules CloudFormation to be deployed
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
         - Name: ACCOUNT_ID
           Value: !Ref 'AWS::AccountId'
         - Name: OUTPUT_BUCKET
           Value: !Join [ "-", [ !Ref CodebuildDestinationS3BucketConfig, !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
         - Name: OUTPUT_BUCKET_NO_REGION
           Value: !Join [ "-", [ !Ref CodebuildDestinationS3BucketConfig, !Ref 'AWS::AccountId']]
         - Name: DEFAULT_RULESET
           Value: !Ref DefaultRuleSet
         - Name: DEFAULT_RULESET_OTHER_REGIONS
           Value: !Ref DefaultRuleSetOtherRegions
         - Name: ACCOUNT_LIST
           Value: !Ref AccountListLocalPath
         - Name: OTHER_ACTIVE_REGIONS
           Value: !If [ OtherActiveRegions, !Ref OtherActiveRegions, 'none']
         - Name: RDKLIB_LAYER_NAME
           Value: !Ref RdklibLayerName
         - Name: RULES_LAMBDA_VPC_CONFIG
           Value: !Ref RulesLambdaVpcConfigLocalPath
         - Name: ENGINE_RULE_NAME
           Value: !Ref EngineComplianceRule
         - Name: DATALAKE_QUERIES_BOOL
           Value: !Ref DatalakeQueries
         - Name: FIREHOSE_KEY_LIST
           Value: none
         - Name: ATHENA_COLUMN_LIST
           Value: none
         - Name: CONFIG_CENTRAL_BUCKET
           Value: !Ref CentralizedS3BucketConfig
         - Name: COMPLIANCE_EVENT_CENTRAL_BUCKET
           Value: !Ref CentralizedS3BucketComplianceEventName
         - Name: LAMBDA_ROLE_ARN
           Value: !Join [ ":", ["arn:aws:iam:", !Ref 'AWS::AccountId', !Join [ "", ["role/rdk/", !Ref RDKLambdaRoleName]]]]
      Source:
        Type: CODEPIPELINE
        BuildSpec: rulesets-build/buildspec_buildtemplates.yaml
      TimeoutInMinutes: 60
    DependsOn:
     - CodebuildDestinationS3Bucket

  CodeBuildRuleDeployProject:
    Condition: IsMainRegion
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !Join [ "", ["arn:aws:iam::", !Ref 'AWS::AccountId', ":role/", !Ref ComplianceEngineCodeBuildRoleName]]
      Artifacts:
        Type: CODEPIPELINE
      Name: !Ref CodeBuildRulesDeployTemplateProjectName
      Description: "Deploy the Config Rules CloudFormation to be deployed "
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
         - Name: OUTPUT_BUCKET_NO_REGION
           Value: !Join [ "-", [ !Ref CodebuildDestinationS3BucketConfig, !Ref 'AWS::AccountId']]
         - Name: OTHER_ACTIVE_REGIONS
           Value: !If [ OtherActiveRegions, !Ref OtherActiveRegions, 'none']
         - Name: ENGINE_RULE_NAME
           Value: !Ref EngineComplianceRule
         - Name: REMOTE_EXE_ROLE_NAME
           Value: !Ref ConfigAndComplianceAuditRoleName
         - Name: REMOTE_EXE_PATH_NAME
           Value: !Ref ConfigAndComplianceAuditRolePath
         - Name: RULES_STACK_NAME
           Value: !Ref ConfigRulesStackName
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec_deploytemplates.yaml
      TimeoutInMinutes: 60
    DependsOn:
     - CodebuildDestinationS3Bucket

  CodebuildSourceS3Bucket:
    Condition: IsMainRegion
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ "-", [ !Ref CodebuildSourceS3BucketConfig, !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
      Tags:
      - Key: Owner
        Value: Security
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !ImportValue KMS-compliance-engine-key-id
              SSEAlgorithm: aws:kms

  CodebuildDestinationS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ "-", [ !Ref CodebuildDestinationS3BucketConfig, !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
      Tags:
      - Key: Owner
        Value: Security
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !ImportValue KMS-compliance-engine-key-id
              SSEAlgorithm: aws:kms

  CodePipelineBucket:
    Condition: IsMainRegion
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ "-", [ !Ref CodePipelineArtifactS3BucketConfig, !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
      Tags:
      - Key: Owner
        Value: Security
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !ImportValue KMS-compliance-engine-key-id
              SSEAlgorithm: aws:kms

  #Config Aggregator

  ConfigAggregator:
    Condition: IsMainRegion
    Type: AWS::Config::ConfigurationAggregator
    Properties:
      AccountAggregationSources:
        - AccountIds: !Ref ApplicationAccountIds
          AllAwsRegions: True
      ConfigurationAggregatorName: SecurityConfigAggregator

  #Firehose

  MainComplianceFirehoseLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: firehose
      RetentionInDays: 14

  MainComplianceFirehoseLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref MainComplianceFirehoseLogGroup
      LogStreamName: compliance-engine

  MainComplianceFirehoseDeliveryStream:
    Condition: IsMainRegion
    Type: "AWS::KinesisFirehose::DeliveryStream"
    Properties: 
      DeliveryStreamName: 'Firehose-Compliance-Engine'
      ExtendedS3DestinationConfiguration:
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref MainComplianceFirehoseLogGroup
          LogStreamName: !Ref MainComplianceFirehoseLogStream
        BucketARN:  !Join ["", [ "arn:aws:s3:::", !Join [ "-", [ !Ref CentralizedS3BucketComplianceEventName, !Ref 'AWS::AccountId']]]]
        BufferingHints:
          IntervalInSeconds: 900
          SizeInMBs: 50
        CompressionFormat: GZIP
        Prefix: compliance-as-code-events/
        RoleARN: !Join [ ":", ["arn:aws:iam:", !Ref 'AWS::AccountId', "role/ComplianceEngine-FirehoseDeliveryStreamRole"]]
        ProcessingConfiguration:
          Enabled: true
          Processors: 
          - Parameters: 
            - ParameterName: LambdaArn
              ParameterValue: !GetAtt LambdaETL.Arn 
            Type: Lambda
    DependsOn:
      - MainComplianceFirehoseLogGroup
      - MainComplianceFirehoseLogStream

  CentralizedS3BucketComplianceEvent:
    Condition: IsMainRegion
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [ "-", [ !Ref CentralizedS3BucketComplianceEventName, !Ref 'AWS::AccountId']]
      Tags:
      - Key: Owner
        Value: Security
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !ImportValue KMS-compliance-engine-key-id
              SSEAlgorithm: aws:kms

# ETL on the compliance event data

  LambdaETL:  
    Condition: IsMainRegion
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: !Ref LambdaETLName
      Handler: "etl_evaluations.lambda_handler"
      Role: !Join [ "", [ "arn:aws:iam::", !Ref 'AWS::AccountId', ":role/", !Ref LambdaRoleETLName ]]
      Environment:
        Variables:
           ComplianceWhitelist: !If [ WhitelistLocation, !Ref WhitelistLocation, 'none']
      Code: 
        ZipFile: |
          the code is given by the pipeline.
      
      Runtime: python3.6
      Timeout: 300
      
  LambdaETLInvokePermission:  
    Condition: IsMainRegion
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaETL.Arn
      Action: 'lambda:InvokeFunction'
      Principal: firehose.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !GetAtt MainComplianceFirehoseDeliveryStream.Arn
