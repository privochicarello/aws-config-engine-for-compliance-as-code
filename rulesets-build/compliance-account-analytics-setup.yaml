AWSTemplateFormatVersion: 2010-09-09
Description: Data Lake for the Compliance-as-Code Engine

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Compliance-as-Code Data Lake Configuration
        Parameters:
         - CentralizedS3BucketConfig
         - CentralizedS3BucketComplianceEventName

Parameters:
  CentralizedS3BucketConfig:
    ConstraintDescription: Enter DNS-compliant prefix
    Description: Bucket prefix where Config logs are stored. A dash and the account ID (12-digit) will be appended to the name.
    MaxLength: 63
    MinLength: 10
    Type: String

  CentralizedS3BucketComplianceEventName:
    ConstraintDescription: Enter DNS-compliant prefix
    Description: Bucket prefix where Compliance Event are stored. A dash and the account ID (12-digit) will be appended to the name.
    MaxLength: 63
    MinLength: 10
    Type: String

  FolderWhereFireHoseIsSending:
    Description: Folder in the Centralized Bucket of Compliance event, where Firehose loads the data.
    Default: compliance-as-code-events
    MaxLength: 63
    MinLength: 10
    Type: String

  KeyListGeneratedByFirehose:
    Description: List of the key in the json generated by Kinesis Firehose.
    Type: String

  ColumnKeyList:
    Description: List of the columns in Athena.
    Type: String
  
  AccountList:
    Description: Verify if Account List is configured.
    Type: String

  LocationAccountListCSV:
    Description: Location where the account_list.csv is stored.
    Type: String

Conditions:
  AccountList: !Not [ !Equals [!Ref AccountList, "none"]]

Resources:
  AthenaNamedQueryInitDB:
    Type: AWS::Athena::NamedQuery
    Properties:
      Database: "default"
      Description: "(To be run 1st) A query to build database for advanced analytics"
      Name: "1-Database For ComplianceAsCode"
      QueryString: "CREATE DATABASE IF NOT EXISTS complianceascode"
      
  AthenaNamedQueryInitTable:
    Type: AWS::Athena::NamedQuery
    Properties:
      Database: "complianceascode"
      Description: "(To be run 2nd) A query to build table for advanced analytics"
      Name: "2-Table For ComplianceAsCode"
      QueryString: !Join 
        - ""
        - - CREATE EXTERNAL TABLE IF NOT EXISTS complianceascode.events (
          - !Ref ColumnKeyList
          - ") ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe' WITH SERDEPROPERTIES ('paths'='"
          - !Ref KeyListGeneratedByFirehose
          - "') STORED AS INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat' LOCATION 's3://"
          - !Join [ "-", [ !Ref CentralizedS3BucketComplianceEventName, !Ref 'AWS::AccountId']]
          - /
          - !Ref FolderWhereFireHoseIsSending
          - "/' TBLPROPERTIES ('classification'='json', 'compressionType'='gzip', 'transient_lastDdlTime'='1521161215', 'typeOfData'='file')"
 
  AthenaNamedQueryConfigTable:
    Type: AWS::Athena::NamedQuery
    Properties:
      Database: "complianceascode"
      Description: "(To be run 3rd) A query to build table for query config"
      Name: "3-Table For Config in ComplianceAsCode"
      QueryString: !Join 
        - ""
        - - "CREATE EXTERNAL TABLE IF NOT EXISTS complianceascode.config (fileVersion string, configSnapshotId string, configurationItems array<struct<relatedEvents:string, relationships:string, configuration:string, supplementaryConfiguration:string, tags:string, configurationItemVersion:string, configurationItemCaptureTime:string, configurationStateId:string, awsAccountId:string, configurationItemStatus:string, resourceType:string, resourceId:string, resourceName:string, ARN:string, awsRegion:string, availabilityZone:string, configurationStateMd5Hash:string, resourceCreationTime:string>>) ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe' WITH SERDEPROPERTIES ('serialization.format' = '1') LOCATION 's3://"
          - !Join [ "-", [ !Ref CentralizedS3BucketConfig, !Ref 'AWS::AccountId']]
          - "/'"

  AccountListTable:
    Type: AWS::Athena::NamedQuery
    Properties:
      Database: "complianceascode"
      Description: "(To be run 4th) A query to build table for listing all the accounts"
      Name: "4-Table For AccountList"
      QueryString: !Join 
        - ""
        - - "CREATE EXTERNAL TABLE IF NOT EXISTS complianceascode.accountlist (accountname string, accountid string, owneremails string, tag1 string, tag2 string ) ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde' WITH SERDEPROPERTIES ('separatorChar'=',') STORED AS INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat' LOCATION 's3://"
          - !Ref LocationAccountListCSV
          - "/csv'"