#
# Copyright 2017-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.
#

AWSTemplateFormatVersion: '2010-09-09'
Description: Create required IAM resource for Compliance-as-Code oversight in this Application Account

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Compliance-as-Code Engine Configuration
        Parameters:
         - MainRegion
         - ComplianceAccountId
      - Label:
          default: (Advanced User Only) Deployment options
        Parameters:
         - ConfigAndComplianceAuditRoleName
         - ComplianceEngineCodeBuildRoleName
         - CentralizedS3BucketConfigFullName
         - ConfigAndComplianceAuditRolePath
         - ConfigRulesStackName
         - RDKLambdaRoleName
         - DeployAWSConfig
         - ForceDeploymentRoleInMainRegionOnly

Parameters:
  CentralizedS3BucketConfigFullName:
    ConstraintDescription: Enter DNS-compliant name
    Description: (Only if DeployAWSConfig is set to "true") Bucket name where Config logs are centrally stored. It is located in the Compliance Account.
    Default: centralized-config-112233445566
    MaxLength: 63
    MinLength: 10
    Type: String
  ComplianceAccountId:
    ConstraintDescription: 12 digits, no dashes
    Description: Account ID of the Compliance Account. The compliance-as-code engine must be installed in this account first.
    Default: "112233445566"
    MaxLength: 12
    MinLength: 12
    Type: String
  ComplianceEngineCodeBuildRoleName:
    Description: Role Name of the Compliance Account CodeBuild Role
    Default: ComplianceEngine-CodeBuildRole
    Type: String
  ConfigAndComplianceAuditRoleName:
    Description: (Only if DeployAWSConfig is set to "true") Role Name of the Compliance Account Cross Account Role
    Default: AWSConfigAndComplianceAuditRole-DO-NOT-DELETE
    Type: String
  ConfigAndComplianceAuditRolePath:
    Description: Role Path of the Compliance Account Cross Account Role
    Default: service-role/
    Type: String
  ConfigRulesStackName:
    Description: Stack Name of all the Config Rules that will be generated in each region
    Default: Compliance-Engine-Benchmark-DO-NOT-DELETE
    Type: String
  RDKLambdaRoleName:
    Description: IAM role name for all the custom rule lambda functions
    Default: ComplianceEngine-rdkLambdaRole
    Type: String
  MainRegion:
    Description: Region which is designated as main Region in your Compliance Account.
    Default: us-west-2
    AllowedValues: 
    - us-east-1
    - us-east-2
    - us-west-1
    - us-west-2
    - ap-south-1
    - ap-northeast-1
    - ap-northeast-2
    - ap-southeast-1
    - ap-southeast-2
    - ca-central-1
    - eu-central-1
    - eu-west-1
    - eu-west-2
    - eu-west-3
    - sa-east-1
    AllowedPattern: ^.{0,14}$
    ConstraintDescription: Select one AWS Region only.
    Type: String
  DeployAWSConfig:
    Description: Set to "true" to configure AWS Config. If set to "false", you must give the compliance account to assume the AWS Config service Role, and as well permissions to deploy CloudFormation templates and control Config.
    Default: true
    AllowedValues:
      - true
      - false
    Type: String
  ForceDeploymentRoleInMainRegionOnly:
    Description: Set to "force" to deploy the ConfigAndComplianceAuditRoleName. This options only works in the main Region.
    Default: default
    AllowedValues:
      - default
      - force
    Type: String

Conditions:
  IsMainRegion: !Equals [ !Ref 'AWS::Region', !Ref MainRegion ]
  SetConfig: !Equals [ !Ref DeployAWSConfig, 'true']
  ForceDeployRole: !Equals [ !Ref ForceDeploymentRoleInMainRegionOnly, 'force']
  SetConfigMain: !And
      - !Condition IsMainRegion
      - !Condition SetConfig
  ForceDeployRoleMain: !And
      - !Condition IsMainRegion
      - !Condition ForceDeployRole 
  DeployRole: !Or
      - !Condition SetConfigMain
      - !Condition ForceDeployRoleMain
      
Resources:
  AWSConfigAndComplianceRole:
    Condition: DeployRole
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: config.amazonaws.com
        # Allow RDK lambda functions for Custom Rules in Compliance Account to assume this role in Application Accounts.
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            AWS: !Join [ ":", ["arn:aws:iam:", !Ref ComplianceAccountId, !Join [ "", ["role/rdk/", !Ref RDKLambdaRoleName]]]]
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            AWS: !Join [ ":", ["arn:aws:iam:", !Ref ComplianceAccountId, !Join [ "", ["role/", !Ref ComplianceEngineCodeBuildRoleName]]]]
        Version: '2012-10-17'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/SecurityAudit'
      Path: !Sub /${ConfigAndComplianceAuditRolePath}
      RoleName: !Ref ConfigAndComplianceAuditRoleName

  ConfigS3WritePolicy:
    Condition: DeployRole
    Type: 'AWS::IAM::Policy'
    Properties:
      Roles:
      - !Ref ConfigAndComplianceAuditRoleName
      PolicyName: !Join
        - '-'
        - - ConfigS3Write
          - !Ref 'AWS::AccountId'
          - !Ref 'AWS::Region'
      PolicyDocument:
        Statement:
        - Action:
          - s3:PutObject
          Effect: Allow
          Resource:
          - !Join [ "", [ "arn:aws:s3:::", !Ref CentralizedS3BucketConfigFullName, "/AWSLogs/", !Ref 'AWS::AccountId', "/*"] ]
          Sid: !Join ["", ["ConfigS3Write", !Ref 'AWS::AccountId'] ]
        Version: "2012-10-17"
    DependsOn:
    - AWSConfigAndComplianceRole

  ConfigDeployPolicy:
    Condition: DeployRole
    Type: 'AWS::IAM::Policy'
    Properties:
      Roles:
      - !Ref ConfigAndComplianceAuditRoleName
      PolicyName: !Join
        - '-'
        - - ConfigDeploy
          - !Ref 'AWS::AccountId'
          - !Ref 'AWS::Region'
      PolicyDocument:
        Statement:
        - Action:
          - cloudformation:*
          Effect: Allow
          Resource:
          - !Join [ "", [ "arn:aws:cloudformation:*:", !Ref 'AWS::AccountId', ":stack/", !Ref ConfigRulesStackName ,"*" ]]
          Sid: !Join ["", ["ConfigDeployCfn", !Ref 'AWS::AccountId'] ]
        - Action:
          - config:*
          Effect: Allow
          Resource: "*"
          Sid: !Join ["", ["ConfigAccess", !Ref 'AWS::AccountId'] ]
        Version: "2012-10-17"
    DependsOn:
    - AWSConfigAndComplianceRole

  # Read-only permissions required by Config Rules. This is for any permissions that are required, but not included in SecurityAudit managed policy.
  ConfigReadPolicy:
    Condition: DeployRole
    Type: 'AWS::IAM::Policy'
    Properties:
      Roles:
      - !Ref ConfigAndComplianceAuditRoleName
      PolicyName: !Join
        - '-'
        - - ConfigRead
          - !Ref 'AWS::AccountId'
          - !Ref 'AWS::Region'
      PolicyDocument:
        Statement:
          - Sid: ECRUnconstrained
            Action:
              - ecr:DescribeImages
              - ecr:GetLifecyclePolicy
            Effect: Allow
            Resource: '*'
          - Sid: DataLifecycle
            Action:
              - dlm:GetLifecyclePolicies
              - dlm:GetLifecyclePolicy
            Effect: Allow
            Resource: '*'
    DependsOn:
    - AWSConfigAndComplianceRole

  ConfigRemediationPolicy:
    Condition: DeployRole
    Type: 'AWS::IAM::Policy'
    Properties:
      Roles:
        - !Ref ConfigAndComplianceAuditRoleName
      PolicyName: !Join
        - '-'
        - - ConfigRemediation
          - !Ref 'AWS::AccountId'
          - !Ref 'AWS::Region'
      PolicyDocument:
        Statement:
          - Sid: sns
            Action:
              - iam:PassRole
            Effect: Allow
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/sns-access'
          - Sid: createRemediationServiceRole
            Action:
              - iam:CreateServiceLinkedRole
            Effect: Allow
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/aws-service-role/remediation.config.amazonaws.com/AWSServiceRoleForConfigRemediation'
            Condition:
              StringLike:
                "iam:AWSServiceName": "remediation.config.amazonaws.com"
          - Sid: RemediationExecutionRole
            Action:
              - ssm:*
            Effect: Allow
            Resource: "*"
    DependsOn:
      - AWSConfigAndComplianceRole
     
  ConfigEBSEncryptionPolicy:
    Condition: DeployRole
    Type: 'AWS::IAM::Policy'
    Properties:
      Roles:
      - !Ref ConfigAndComplianceAuditRoleName
      PolicyName: !Join
        - '-'
        - - ConfigEBSEncryption
          - !Ref 'AWS::AccountId'
          - !Ref 'AWS::Region'
      PolicyDocument:
        Statement:
          - Sid: EBSGetEncryption
            Action:
              - ec2:GetEbsEncryptionByDefault
            Effect: Allow
            Resource: '*'
    DependsOn:
    - AWSConfigAndComplianceRole
